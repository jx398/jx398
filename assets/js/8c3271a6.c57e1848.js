"use strict";(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[94],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(4137));const o={id:"introduction",title:"Introducing AgileTs",sidebar_label:"Introduction",slug:"/introduction",description:"An atom based global State and Logic Library implemented in Typescript, offering a reimagined API that focuses on developer experience. The AgileTs state management functionality can be used in various frameworks like React, Vue and plain Javascript.",image:"img/meta.png"},i=void 0,l={unversionedId:"\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840/introduction",id:"\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840/introduction",title:"Introducing AgileTs",description:"An atom based global State and Logic Library implemented in Typescript, offering a reimagined API that focuses on developer experience. The AgileTs state management functionality can be used in various frameworks like React, Vue and plain Javascript.",source:"@site/docs/\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840/e1.md",sourceDirName:"\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840",slug:"/introduction",permalink:"/introduction",draft:!1,tags:[],version:"current",frontMatter:{id:"introduction",title:"Introducing AgileTs",sidebar_label:"Introduction",slug:"/introduction",description:"An atom based global State and Logic Library implemented in Typescript, offering a reimagined API that focuses on developer experience. The AgileTs state management functionality can be used in various frameworks like React, Vue and plain Javascript.",image:"img/meta.png"},sidebar:"mySidebar",previous:{title:"\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840",permalink:"/category/\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840"},next:{title:"1\u3001\u6218\u7565\u5206\u6790\u5de5\u4f5c",permalink:"/\u8d28\u91cf\u7ba1\u7406\u4f53\u7cfb\u57fa\u7840/\u5de5\u5177/\u6218\u7565\u7ba1\u7406/\u6218\u7565\u5206\u6790\u5de5\u4f5c"}},s={},u=[{value:"\ud83d\udc4b Introduction",id:"introduction",level:2},{value:"\ud83d\ude85 Straightforward",id:"straightforward",level:3},{value:"\ud83e\udd38\u200d Flexible",id:"flexible",level:3},{value:"\u26f3\ufe0f Centralize",id:"centralize",level:3},{value:"\ud83c\udfaf Easy to Use",id:"easy-to-use",level:3},{value:"\u23f3 Quick Example",id:"quick-example",level:2},{value:"\ud83d\ude0e Create State",id:"create-state",level:3},{value:"\u26f3\ufe0f Sandbox",id:"sandbox",level:3},{value:"\ud83d\udc68\u200d\ud83d\udcbb When using AgileTs",id:"when-using-agilets",level:2},{value:"\ud83d\udfe6 Typescript",id:"typescript",level:2},{value:"\ud83d\udc6e Data Flow",id:"data-flow",level:2},{value:"<code>1</code>",id:"1",level:4},{value:"<code>2</code>",id:"2",level:4},{value:"<code>3</code>",id:"3",level:4},{value:"<code>4</code>",id:"4",level:4},{value:"<code>5</code>",id:"5",level:4},{value:"<code>6</code>",id:"6",level:4},{value:"\ud83d\udc68\u200d\ud83c\udfeb Learn AgileTs",id:"learn-agilets",level:2},{value:"\ud83c\udfe2 Structure of Documentation",id:"structure-of-documentation",level:2},{value:"\ud83d\udcc1 AgileTs",id:"-agilets",level:3},{value:"\ud83d\udcc1 Quick Start",id:"-quick-start",level:3},{value:"\ud83d\udcc1 Packages",id:"-packages",level:3},{value:"\ud83d\udcc1 Examples",id:"-examples",level:3},{value:"\ud83d\udcc1 Interfaces",id:"-interfaces",level:3},{value:"\ud83e\udd13 Glossary",id:"glossary",level:2},{value:"<code>Agile Sub Instance</code>",id:"agile-sub-instance",level:3},{value:"<code>Observer</code>",id:"observer",level:3},{value:"<code>Runtime</code>",id:"runtime",level:3},{value:"\ud83d\udcac What others say",id:"what-others-say",level:2},{value:"\ud83c\udf0f History of AgileTs",id:"history-of-agilets",level:2},{value:"\ud83c\udf89 Credits",id:"credits",level:2},{value:"\u2753 Something missing",id:"something-missing",level:2},{value:"\ud83d\udc7e UI-Frameworks",id:"-ui-frameworks",level:3},{value:"\ud83e\udd16 SSR-Frameworks",id:"-ssr-frameworks",level:3},{value:"\ud83d\udcd5 Glossary",id:"-glossary",level:3},{value:"Supported",id:"supported",level:4},{value:"Planned",id:"planned",level:4}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"\ud83d\udc4b Introduction"),(0,r.kt)("p",null,"AgileTs is an atom based global State and Logic Library implemented in Typescript.\nIt offers a reimagined API that focuses on ",(0,r.kt)("strong",{parentName:"p"},"developer experience"),"\nand allows you to ",(0,r.kt)("strong",{parentName:"p"},"easily")," and ",(0,r.kt)("strong",{parentName:"p"},"flexible")," manage your application States.\nBesides [States  ../packages/core/api/state/Introduction.md),\nAgileTs offers some other powerful APIs that make your life easier,\nsuch as [Collections  ../packages/core/api/collection/Introduction.md)\nand [Computed States  ../packages/core/api/computed/Introduction.md).\nThe philosophy behind AgileTs is simple:"),(0,r.kt)("h3",{id:"straightforward"},"\ud83d\ude85 Straightforward"),(0,r.kt)("p",null,"Write minimalistic, boilerplate-free code that captures your intent."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Create State with the inital value 'frank'\nconst MY_STATE = createState('frank');\n\n// Update the State value from 'frank' to 'jeff'\nMY_STATE.set('jeff');\n\n// Undo the latest State value change\nMY_STATE.undo();\n\n// Reset the State value to its initial value\nMY_STATE.reset();\n\n// Permanently store the State value in an external Storage\nMY_STATE.persist({key: \"storage-key\"}); \n")),(0,r.kt)("h3",{id:"flexible"},"\ud83e\udd38\u200d Flexible"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Works in nearly any UI-Framework (currently supported are [React  ",(0,r.kt)("a",{parentName:"li",href:"https://reactjs.org/"},"https://reactjs.org/"),"), [React-Native  ",(0,r.kt)("a",{parentName:"li",href:"https://reactnative.dev/"},"https://reactnative.dev/"),") and [Vue  ",(0,r.kt)("a",{parentName:"li",href:"https://vuejs.org/"},"https://vuejs.org/"),"))."),(0,r.kt)("li",{parentName:"ul"},"Surly behaves with the workflow that suits you best.\nNo need for ",(0,r.kt)("em",{parentName:"li"},"reducers"),", ",(0,r.kt)("em",{parentName:"li"},"actions"),", .."),(0,r.kt)("li",{parentName:"ul"},"Has ",(0,r.kt)("strong",{parentName:"li"},"0")," external dependencies.")),(0,r.kt)("h3",{id:"centralize"},"\u26f3\ufe0f Centralize"),(0,r.kt)("p",null,"AgileTs is designed to take all business logic out of the UI-Components\nand put them in a central place, often called ",(0,r.kt)("inlineCode",{parentName:"p"},"core"),".\nThe advantage of keeping logic separate to UI-Components,\nis that your code is more decoupled, portable, scalable,\nand above all, easily testable."),(0,r.kt)("p",null,"You can learn more about ways to centralize your application logic with AgileTs\nin our [Style Guides  ./StyleGuides.md)."),(0,r.kt)("h3",{id:"easy-to-use"},"\ud83c\udfaf Easy to Use"),(0,r.kt)("p",null,"Learn the powerful tools of AgileTs in a short period of time.\nAn excellent place to start are our [Quick Start Guides  ./Installation.md),\nor if you don't like to follow tutorials,\nyou can jump straight into the [Example section  ../examples/Introduction.md)."),(0,r.kt)("p",null,"[emo]"),(0,r.kt)("h2",{id:"quick-example"},"\u23f3 Quick Example"),(0,r.kt)("p",null,"Instead of talking too much about the benefits of using AgileTs,\nwe should rather see them in action."),(0,r.kt)("h3",{id:"create-state"},"\ud83d\ude0e Create State"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'// -- core.js ------------------------------------------\n\n// 1\ufe0f\u20e3 Create State with the initial value "Hello Friend!"\nconst MY_FIRST_STATE = createState("Hello Friend!");\n\n\n// -- MyComponent.whatever ------------------------------------------\n\n// 2\ufe0f\u20e3 Bind initialized State to the desired UI-Component.\n// And wolla, the Component is reactive. \n// Everytime the State mutates the Component re-renders.\nconst myFirstState = useAgile(MY_FIRST_STATE);\nconsole.log(myFirstState); // Returns "Hello Friend!"\n')),(0,r.kt)("p",null,"Want to learn how to implement AgileTs in your preferred UI-Framework?\nCheck out our [Quick Start Guides  ./Installation.md)."),(0,r.kt)("h3",{id:"sandbox"},"\u26f3\ufe0f Sandbox"),(0,r.kt)("p",null,"Test AgileTs yourself in a [codesandbox  ",(0,r.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/agilets-first-state-f12cz"},"https://codesandbox.io/s/agilets-first-state-f12cz"),").\nIt's only one click away. Just select your preferred UI-Framework below."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[React  ",(0,r.kt)("a",{parentName:"li",href:"https://codesandbox.io/s/agilets-first-state-f12cz"},"https://codesandbox.io/s/agilets-first-state-f12cz"),")"),(0,r.kt)("li",{parentName:"ul"},"[React-Native  ",(0,r.kt)("a",{parentName:"li",href:"https://snack.expo.io/@bennodev/agilets-first-state"},"https://snack.expo.io/@bennodev/agilets-first-state"),")"),(0,r.kt)("li",{parentName:"ul"},"[Vue  ",(0,r.kt)("a",{parentName:"li",href:"https://codesandbox.io/s/agilets-first-state-i5xxs"},"https://codesandbox.io/s/agilets-first-state-i5xxs"),")")),(0,r.kt)("p",null,"More examples can be found in the [Example section  ../examples/Introduction.md)."),(0,r.kt)("h2",{id:"when-using-agilets"},"\ud83d\udc68\u200d\ud83d\udcbb When using AgileTs"),(0,r.kt)("p",null,"AgileTs was built to manage the global states of your business logic\nand logic in general that isn't explicitly bound to a UI-Component.\nThis includes, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"server caching states")," like the current logged-in user\nor global ",(0,r.kt)("inlineCode",{parentName:"p"},"ui states")," like the current theme of your application.\nAgileTs was not intended to handle any states\nthat belong to one single UI-Component like ",(0,r.kt)("inlineCode",{parentName:"p"},"isModalOpen"),"."),(0,r.kt)("h2",{id:"typescript"},"\ud83d\udfe6 Typescript"),(0,r.kt)("p",null,"AgileTs is 99% written in Typescript\nand offers an excellent type-safety."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const USER = createState<UserInterface | null>(null); // \u2705\nUSER.set(123); // \u274c\nUSER.set({id: 1, name: 'jeff'}); // \u2705\n")),(0,r.kt)("h2",{id:"data-flow"},"\ud83d\udc6e Data Flow"),(0,r.kt)("p",null,"We can summarize the flow of data through a AgileTs app with this diagram.\nBelow the diagram you can find an explanation for each station\nlabeled with a ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),"."),(0,r.kt)("p",null,"![Log Custom Styles Example ../../static/img/docs/data-flow.png)"),(0,r.kt)("h4",{id:"1"},(0,r.kt)("inlineCode",{parentName:"h4"},"1")),(0,r.kt)("p",null,"In State-Management, the Data-Flow more or less starts and ends in the UI-Component.\nFor example, if we click a Button, we trigger an action that resolves in a UI change.\nSo by clicking a Theme Button, we start an action that changes the color theme of the current site.\nIn order that this color change can visibly happen, the Component has to rerender.\nFor this, we need to subscribe/bind the State (",(0,r.kt)("inlineCode",{parentName:"p"},"THEME_STATE"),") to the UI-Component,\nwith, for instance, the ",(0,r.kt)("inlineCode",{parentName:"p"},"useAgile()")," hook.\nSuch subscription is essential to rerender the Component whenever the subscribed State mutates."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ..\nonClick={() => {\n    toggleTheme();\n}}\n// ..\n")),(0,r.kt)("h4",{id:"2"},(0,r.kt)("inlineCode",{parentName:"h4"},"2")),(0,r.kt)("p",null,"The action, triggered by the Theme Button,\nthen mutates the actual ",(0,r.kt)("inlineCode",{parentName:"p"},"THEME_STATE")," and might do some side calculations.\nWe can also omit this step and edit the State directly in the UI-Component.\nEveryone as he likes. However, I prefer separating UI-Component logic from global/business logic."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const toggleTheme = () => {\n  THEME_STATE.invert();\n}\n")),(0,r.kt)("h4",{id:"3"},(0,r.kt)("inlineCode",{parentName:"h4"},"3")),(0,r.kt)("p",null,"Now we come to the inner workings of AgileTs,\ni.e. what the actual AgileTs user no longer sees from the outside.\nAfter the State has been mutated, it will notify the Observer.\nEach State has its own Observer, which serves as an Interface to the Runtime\nand keeps track of the subscribed UI-Components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ..\nTHEME_STATE.ingestValue(/* new value of THEME_STATE */);\n// ..\n")),(0,r.kt)("h4",{id:"4"},(0,r.kt)("inlineCode",{parentName:"h4"},"4")),(0,r.kt)("p",null,"The Observer then creates a Job and passes it to the Runtime.\nThe created Job has a reference to the Observer itself in order to perform the actual action\nand rerender the correct UI-Components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ..\nAgileInstance.runtime.ingest(ThemeStateChangeJob);\n// ..\n")),(0,r.kt)("h4",{id:"5"},(0,r.kt)("inlineCode",{parentName:"h4"},"5")),(0,r.kt)("p",null,"The main task of the Runtime is to queue Jobs and avoid race conditions.\nIt also combines rerender tasks if multiple Jobs try to rerender the same Component.\nFirstly the Runtime processes all pending Jobs by calling a function in the Observer, which mutates the actual State value.\nAlso, it collects the rerender tasks of the individual Jobs.\nIf there are no more pending Jobs, it starts processing the rerender tasks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ..\njob.observer.perform(job);\njobsToRerender.push(job);\n// ..\n")),(0,r.kt)("h4",{id:"6"},(0,r.kt)("inlineCode",{parentName:"h4"},"6")),(0,r.kt)("p",null,"A side effect of running a Job is the rerendering of subscribed Components.\nAnother could be the persisting into a permanent Storage or rebuilding the [Group  ../packages/core/api/collection/group/Introduction.md) output."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ..\nsubscriptionContainer.callback(); // If Component based Subscription\n// ..\n")),(0,r.kt)("h2",{id:"learn-agilets"},"\ud83d\udc68\u200d\ud83c\udfeb Learn AgileTs"),(0,r.kt)("p",null,"We have a variety of resources available to help you learn AgileTs.\nAn excellent place to start are our [Quick Start Guides  ./Installation.md),\nwhere you learn the fundamentals about how to use AgileTs in your preferred UI-Framework.\nAfter knowing the ground concept of AgileTs,\nwe recommend taking a look at our [Style Guides  ./StyleGuides.md).\nThese will help you to get some inspiration\non how to structure a scalable application using AgileTs.\nNow you are ready to use AgileTs wherever you want.\nIf you need some more information about some functionalities of AgileTs,\nuse the search bar in the top right corner.\nAnd in case you have any further questions,\ndon't hesitate to join our [Community Discord  ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/T9GzreAwPH"},"https://discord.gg/T9GzreAwPH"),")."),(0,r.kt)("h2",{id:"structure-of-documentation"},"\ud83c\udfe2 Structure of Documentation"),(0,r.kt)("h3",{id:"-agilets"},"\ud83d\udcc1 AgileTs"),(0,r.kt)("p",null,"You are currently in the ",(0,r.kt)("inlineCode",{parentName:"p"},"AgileTs")," section, which serves as source for general topics like\nthe [Style Guide  ./StyleGuides.md) or a basic [Installation Guide  ./Installation.md)."),(0,r.kt)("h3",{id:"-quick-start"},"\ud83d\udcc1 Quick Start"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Quick Start")," section is all about how to get AgileTs up and running in different environments\nlike [React  ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"https://reactjs.org/"),") or [Vue  ",(0,r.kt)("a",{parentName:"p",href:"https://vuejs.org/"},"https://vuejs.org/"),"). In each Quick Start Guide the basics of some AgileTs\nclasses (like the [State  ../packages/core/api/state/Introduction.md)) are covered too."),(0,r.kt)("h3",{id:"-packages"},"\ud83d\udcc1 Packages"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"packages")," section all the AgileTs packages are listed and described in detail.\nFor example, you can find detailed information about the [core  ../packages/core/Introduction.md) and\nthe [react  ../packages/react/Introduction.md) package there.\nIf you click on one of these packages, it will reveal you an Introduction\nabout that package, an Installation Guide and a comprehensive API documentation.\nIn case of the [core  ../packages/core/Introduction.md)\npackage you find the [State  ../packages/core/api/state/Introduction.md)\nand [Collection  ../packages/core/api/collection/Introduction.md) documentation under the API bullet point.\nNote that ",(0,r.kt)("inlineCode",{parentName:"p"},"\u26a0\ufe0f WIP")," isn't an actual package.\nIt is intended to separate packages that are currently ",(0,r.kt)("inlineCode",{parentName:"p"},"work in progress"),"\nand not ready for the production from the stable packages."),(0,r.kt)("h3",{id:"-examples"},"\ud83d\udcc1 Examples"),(0,r.kt)("p",null,"Some interactive examples can be found in the ",(0,r.kt)("inlineCode",{parentName:"p"},"example")," section."),(0,r.kt)("h3",{id:"-interfaces"},"\ud83d\udcc1 Interfaces"),(0,r.kt)("p",null,"Without any context this section might be useless to you.\nAs the name suggests, it's all about Typescript interfaces of AgileTs,\nwhich are outsourced for a better overview.\nYou might be redirected to parts of the Interface section from\nother documentation parts.\nOften to learn some more about particular properties of an interface."),(0,r.kt)("h2",{id:"glossary"},"\ud83e\udd13 Glossary"),(0,r.kt)("p",null,"In these docs, we will refer to our classes with a capital first letter.\nFor example, when you see 'state', we refer to the programming concept ",(0,r.kt)("inlineCode",{parentName:"p"},"state"),",\nbut when you see 'State', we are referring to our [State  ../packages/core/api/state/Introduction.md) class."),(0,r.kt)("h3",{id:"agile-sub-instance"},(0,r.kt)("inlineCode",{parentName:"h3"},"Agile Sub Instance")),(0,r.kt)("p",null,"Instances that hold a reference to the [",(0,r.kt)("inlineCode",{parentName:"p"},"Agile Instance"),"  ../packages/core/api/agile-instance/Introduction.md)\nand depend on its functionalities."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"[States  ../packages/core/api/state/Introduction.md)"),(0,r.kt)("li",{parentName:"ul"},"[Collections  ../packages/core/api/collection/Introduction.md)"),(0,r.kt)("li",{parentName:"ul"},"[Groups  ../packages/core/api/collection/group/Introduction.md)"),(0,r.kt)("li",{parentName:"ul"},"[Selectors  ../packages/core/api/collection/selector/Introduction.md)"),(0,r.kt)("li",{parentName:"ul"},"[Computed States  ../packages/core/api/computed/Introduction.md)")),(0,r.kt)("h3",{id:"observer"},(0,r.kt)("inlineCode",{parentName:"h3"},"Observer")),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"Observer")," can be seen as an interface to the [runtime  #runtime).\nIt keeps track of subscribed UI-Components, caches the State value represented by the UI\nand performs the actual State mutation action executed by the runtime."),(0,r.kt)("h3",{id:"runtime"},(0,r.kt)("inlineCode",{parentName:"h3"},"Runtime")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Runtime")," ques and executes provided Observer Jobs\nand performs their side effects such as re-rendering subscribed UI-Components.\nThe main reason AgileTs has its own runtime is to prevent race conditions\nand batch re-renders."),(0,r.kt)("h2",{id:"what-others-say"},"\ud83d\udcac What others say"),(0,r.kt)("p",null,"Actually, nothing, yet. If you want to be the first one, don't mind tweeting whatever you think about AgileTs.\nBut don't forget to tag [@AgileTypescript  ",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/AgileTypescript"},"https://twitter.com/AgileTypescript"),"). Otherwise, we can't find your tweet."),(0,r.kt)("h2",{id:"history-of-agilets"},"\ud83c\udf0f History of AgileTs"),(0,r.kt)("p",null,"After exploring the many options of Javascript State libraries, including the popular Redux and MobX.\nI felt like I need a simpler, more straightforward solution.\nOne day I accidentally stumbled across a stream from [@jamiepine  ",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/jamiepine"},"https://twitter.com/jamiepine"),").\nJamie was using an interesting approach of State Management which I haven't seen yet.\nThe Library he used was called PulseJs, the ancestor of AgileTs, so to speak."),(0,r.kt)("p",null,"I liked this concept of State Management a lot and started using it in my own projects.\nAt this point in time (spring 2020), it wasn't officially released.\nTherefore, it was quite buggy and had no documentation. But I figured out how to use it anyway\nand saved my finding in a small [pre-documentation  ",(0,r.kt)("a",{parentName:"p",href:"https://www.notion.so/bennoworkspace/Pulse-v3-No-official-Docs-4e92e8d02dd3423582fa95072806cab6"},"https://www.notion.so/bennoworkspace/Pulse-v3-No-official-Docs-4e92e8d02dd3423582fa95072806cab6"),")\nfor PulseJs fellows."),(0,r.kt)("p",null,"The months went by, and no stable version came out. Not even a npm package.\nIn July, I came to the conclusion to contribute to PulseJs,\nin order to speed up the development process a bit.\nBut before I could do anything, I had to figure out how PulseJs works internally.\nAfter hours, I still haven't figured out how it works.\nThis was mainly due to the fact that I was a Typescript noob,\nand the codebase was (in my opinion) not very contributor friendly (not many comments, variables called x, sc, ..).\nTo learn how PulseJs works and to get a deeper understanding of Typescript,\nI decided to rewrite PulseJs from scratch in a separate project, later AgileTs.\nAfter a while, I got the hang and understood how PulseJs works under the hood."),(0,r.kt)("p",null,"Now that I knew how PulseJs works, I could finally start contributing.\nMy [first contribution  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pulse-framework/pulse/commits?author=bennodev19"},"https://github.com/pulse-framework/pulse/commits?author=bennodev19"),")\nwas on the 16th August 2020, where I refactored the ",(0,r.kt)("inlineCode",{parentName:"p"},"PulseHOC"),".\nUnfortunately, PulseJs was moving further and further away\nfrom my idea of an ideal State Management Library.\nFor instance, they introduced the ",(0,r.kt)("inlineCode",{parentName:"p"},"Pulse.Core"),",\nwhich more or less forced you to define all States in a single source of truth object called ",(0,r.kt)("inlineCode",{parentName:"p"},"core"),".\nI wouldn't say I liked that change since I switched, among other reasons,\nto PulseJs in order not to define all my States in a single object.\nBecause of this relatively significant design change,\nI would have to rebuild my entire State Management Logic of my applications.\nWhich I didn't want to do because I liked the old concept more."),(0,r.kt)("p",null,"Luckily I had the refactored PulseJs version lying around,\nwhich I created to learn how PulseJs works internally and released it as an own library called\n[agile-architecture  ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/agile-architecture"},"https://www.npmjs.com/package/agile-architecture"),").\nAgile-Architecture was at that point just an old refactored version of PulseJs without the ",(0,r.kt)("inlineCode",{parentName:"p"},"Pulse.Core"),".\nAnother reason I turned away from PulseJs, besides the different visions,\nwas the leak of organization. Some of my changes never got merged into the ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch.\nWhy? Idk. But I am sure that it was not intentional.\nFor instance, I fixed an annoying ",(0,r.kt)("inlineCode",{parentName:"p"},"usePulse()")," type issue,\nand eight months later, it is still not merged into the ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),".\nWhy should I contribute if my changes, which fixed a problem I had,\nwill never be in a release version?"),(0,r.kt)("p",null,"Now that I had my own State Management Library, I had more control and adapted it to my needs.\nOver time AgileTs evolved away from PulseJs with other visions and goals.\nDuring this time, I rewrote and optimized all internal classes, created tests,\nand wrote a documentation (to improve my writing skills and english).\nToday AgileTs has only a similar syntax to PulseJs. Internal, it works quite differently."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Conclusion:")," The idea of AgileTs is based on PulseJs,\nand I would have loved to continue working on PulseJs.\nBut certain circumstances, such as a poor organization and different visions,\nhave driven me to write my own State Manager based on the excellent ground concept\nof PulseJs and other MVVM libraries."),(0,r.kt)("h2",{id:"credits"},"\ud83c\udf89 Credits"),(0,r.kt)("p",null,"AgileTs is inspired by MVVM libraries like [MobX  ",(0,r.kt)("a",{parentName:"p",href:"https://mobx.js.org/README.html"},"https://mobx.js.org/README.html"),")\nor [PulseJs  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pulse-framework/pulse"},"https://github.com/pulse-framework/pulse"),")."),(0,r.kt)("h2",{id:"something-missing"},"\u2753 Something missing"),(0,r.kt)("p",null,"If you find issues with the documentation or have suggestions on how to improve the documentation or the project in\ngeneral, please [file an issue  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/agile/agile-ts/issues"},"https://github.com/agile/agile-ts/issues"),") for us or join\nour [Community Discord  ",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/T9GzreAwPH"},"https://discord.gg/T9GzreAwPH"),") and notice it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"#issue")," channel."),(0,r.kt)("p",null,"![image.png  ../../static/namespaces.png)"),(0,r.kt)("p",null,"A quick overview of all frameworks that AgileTs supports\nor has planned to support in the near future."),(0,r.kt)("h3",{id:"-ui-frameworks"},"\ud83d\udc7e UI-Frameworks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Framework"),(0,r.kt)("th",{parentName:"tr",align:null},"Supported"),(0,r.kt)("th",{parentName:"tr",align:null},"Planned"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[React  ",(0,r.kt)("a",{parentName:"td",href:"https://reactjs.org"},"https://reactjs.org"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[React-Native  ",(0,r.kt)("a",{parentName:"td",href:"https://reactnative.dev/"},"https://reactnative.dev/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Angular  ",(0,r.kt)("a",{parentName:"td",href:"https://angular.io/"},"https://angular.io/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Vue  ",(0,r.kt)("a",{parentName:"td",href:"https://vuejs.org/"},"https://vuejs.org/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe8"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Svelte  ",(0,r.kt)("a",{parentName:"td",href:"https://svelte.dev/"},"https://svelte.dev/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")))),(0,r.kt)("h3",{id:"-ssr-frameworks"},"\ud83e\udd16 SSR-Frameworks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Framework"),(0,r.kt)("th",{parentName:"tr",align:null},"Supported"),(0,r.kt)("th",{parentName:"tr",align:null},"Planned"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[NextJs  ",(0,r.kt)("a",{parentName:"td",href:"https://nextjs.org/"},"https://nextjs.org/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe8"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Gatsby  ",(0,r.kt)("a",{parentName:"td",href:"https://www.gatsbyjs.com/"},"https://www.gatsbyjs.com/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe8"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[Razzle  ",(0,r.kt)("a",{parentName:"td",href:"https://razzlejs.org/"},"https://razzlejs.org/"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udfe8"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))),(0,r.kt)("h3",{id:"-glossary"},"\ud83d\udcd5 Glossary"),(0,r.kt)("h4",{id:"supported"},"Supported"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u2705 - AgileTs supports this Framework"),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udfe8 - AgileTs supports this Framework partly (-> hasn't been extensively tested, and the workflow needs to be improved)"),(0,r.kt)("li",{parentName:"ul"},"\u274c - AgileTs doesn't support this Framework")),(0,r.kt)("h4",{id:"planned"},"Planned"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u2705 - AgileTs will support this Framework in the future"),(0,r.kt)("li",{parentName:"ul"},"\ud83d\udfe8 - AgileTs might (if there is interest) support this Framework in the future"),(0,r.kt)("li",{parentName:"ul"},"\u274c - AgileTs won't support this Framework")))}c.isMDXComponent=!0}}]);